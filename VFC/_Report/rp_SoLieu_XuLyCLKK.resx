<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="xrPictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QCCRXhpZgAATU0AKgAAAAgABQESAAMAAAABAAEAAAEaAAUAAAAB
        AAAASgEbAAUAAAABAAAAUgEoAAMAAAABAAIAAIdpAAQAAAABAAAAWgAAAAAAAABgAAAAAQAAAGAAAAAB
        AAKgAgAEAAAAAQAAAMigAwAEAAAAAQAAAFYAAAAAAAD/2wBDAAIBAQIBAQICAQICAgICAwUDAwMDAwYE
        BAMFBwYHBwcGBgYHCAsJBwgKCAYGCQ0JCgsLDAwMBwkNDg0MDgsMDAv/2wBDAQICAgMCAwUDAwULCAYI
        CwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwv/wAARCABWAMgD
        ASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQA
        AAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6
        Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKz
        tLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEB
        AQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEI
        FEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hp
        anN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX
        2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9/KKKKACiiigAooooAKQsF618Gf8ABQ7/
        AILWD9j34l6n4E8DeAdQ1LxPp6RyNeavMLbT2WRQySRLGWedDnGcx8hhnIr8wP2oP+CoPxu/aiFxbfEL
        xtf2GjT5B0nRSdPs9v8AdYRnfKP+ujtXzuP4mwmCk6avKa0suj82/wBLn7jwb4A8S8W0KWOqclDDTSlG
        c3dyi9U4wjd/+BOPqftV+07/AMFU/gd+yb58HxJ8bWF9rEAOdH0b/iYX+4fwskZ2xH/royV6f+zV+0R4
        b/as+CWgePvhRcST6L4ht/OiWUBZrdwSrwyqCQsiOrKwyeRwSMGv5bbxQrHaAM8/qa/Qz/g3m/b2/wCF
        LfG+4+D3xGvfL8M+Pp/O0Z5XwllqoUDyxnoJ0UL/ANdET+8a83LuKJ4vFKnWiowlovJ9Lv8ADZH2/HX0
        fcNw3w9UxuW1p1cTS96d7JSgl73LFbNfFrKWia7H7gUUdaK+0P5XCiiigAr5T/4Kqf8ABQ+0/Yj+EP2L
        wfNb3PxC8TxPFo9scN9iT7rXkq/3U6KD958DoGx69+1z+1T4b/Y8+CWq+M/iRLmK0XyrKzRgJtSuWB8u
        CPPdiCSf4VDMeBX8+X7Q/wAf/En7T/xf1nxr8VLr7Tq2sS7tik+VaRDiOCIH7saLwB35J5JNfL8S54st
        pexpP95L8F39e33n9B+A/hK+Osw/tTMof7BReqf/AC9mtVBf3Vo5+Vo/auv21/4I7ftI3X7SH7E2h3Hi
        y+m1HxD4auJtF1OeeTfNO8ZDxyOTyS0UkeSepBr6mr8M/wDgkb/wUU0H9hPxL4yt/jBFrNz4a8SWsM0U
        enQLPKl5ExCnazqAGjkcE5/gWvrTxX/wcc+ALJmHgz4eeMtSx91rq4trQH/vlpCPyqMp4iwiwVP6xVSm
        lZ99NL/M6fEbwP4jnxTjlkWXyqYac+eDXLGK51zOKcmkuWTcbdEkfoxRXxh+wH/wUy8b/t+/E68g8JfD
        Sy8N+CtDXdqusXWqvdOJGH7u3hVYkVpG+8cnCqMnqoP2fX0WExdLG0/a0XePezX5n4lxLwzmHCONeXZp
        BQrpJuKlGbjfVKTg5JO2tr3s0+oUUUV0ngBRRRQAUUUUAFFFFABRRRQAUUUUAfBv/Bdf9iA/H74Cp8Q/
        ANkZfFfw+heW4WNcvfaZndKnHVojmVfbzB1YV+H2oHPI5Br+rC5t0u7d4rpFkilUq6MMq4PBBB6giv56
        v+Ctv7Ecn7FX7UV/aeHbZ4/Bfinfqvh9wPkijLfvbXPrC7YA/uNGe9fA8W5XyzWNprR6S9ej/T7j+zfo
        1eIX1ihPhTGz96F50W+sd5w+T9+K7OXRI+TL77xrKj1K50bUYLzR7ia0vLOVJ4J4mKyQyIQyupHRgwBB
        9RWrffeNYl93r46PQ/prGJO6Z/Sf/wAEov267b9vf9kvSPEeoywr4u0TGk+JbZCAY7xFH74L2SZdsg7D
        cy/wmvpev5sf+CPX7fL/ALBv7Xen3niq6eLwJ4xMej+JEJOyCNm/c3ePWF2yT18tpB3Ff0l29xHdwJLa
        uksUqh0dDlXBGQQR1B9a/VsjzH+0MMnJ+/HR/wCfz/O5/nP4s8E/6mZ3ONCNsPVvOn2Sv70P+3Xt/dce
        4+szxp4z0v4d+EtR13xvfW+maRpFu91eXc7bY7eJASzMfYD8a0ycda/G/wD4LU/8FI/+F7+MLj4V/Ba/
        3+DNAucaxeQP8mtXiH/Vqw+9DEw+juM8hVJ2zbNKeVUHVnv0Xd/1ucPhr4fY3xGziGXYb3aa96rO2kIX
        1fnJ7RXV+SbXg/8AwUi/bz1X9uv43SajEbiz8G6Gz23h/TnONkZPzXEq/wDPWTAJ/uqFXsSfneiivxnE
        4mpjKsq1V3k9z/UXIsjwXDeAo5Zl9Pko01yxX6t9W3q3u222Feh/stfsz+JP2uPjVpPgn4Yw5u79t9zd
        OpMOm2ykeZcSkfwqDwOrMVUcmuL8LeFtS8ceJdP0bwfZXGpatqtwlpZ2kCb5biVyFVFHqSa/e3/gmZ+w
        Bpv7C/wWSDVFt7zxzr6pca9fphsNjK20Tf8APKPJH+0xZu4A9fIMmlm1f3v4cfif6LzZ+b+MPijQ8Nsp
        cqTUsZVuqUe3epJfyx7falaO12vVf2ZP2cvDn7KfwY0fwT8LrfydN0uP55WA869mbmSeUj7zu3J9BgDA
        AFd/RRX6/TpxpRUIKyWiR/mVjMZXzGvUxWJm51JtylJu7bbu233bCiiirOYKKKKACiiigAooooAKKKKA
        CiiigAr5y/4Ki/sUW/7cH7K+raBpsMX/AAlej51Tw7OwAKXaKf3Rbskq7oz2yyt/CK+jaDWOIoQxNOVK
        orxasz0snzbFZDjqOY4KXLVpSUovzXfuns11TaP5OddsLjStRuLTVYJba6tZGhnhlUq8MisVZGB6EEEE
        eorn77vX6X/8HCX7Ch+DHxmg+Lnw+s9nhvx5P5OrrEuEstUCk7zjoJ0Ut/vpJ/eFfmhfd6/Icbg54CvK
        hPp+K6M/0v4Z4pw3GeUUM2wuiqR1X8slpKL9H96s9mYeoAMhDcgiv3r/AODd7/goT/w0v+zjJ8MfiRfe
        d41+GUEcNu8r5l1HSfuwSc8s0JxC3sIieWr8Fb/7pr0z9hz45eM/2ZP2jtH8e/BO7jtNR0MSJOZ0L29z
        DIhR4JUBG9WyDjPBUN1ArvynMf7MrKrL4dn6f8A+K8RuCP8AXzLJZfRS9unzU2+kl0b6Rkrp9t+h+2H/
        AAWo/wCClH/CjvCc/wAKvgnf7PGWvW//ABN7yB/m0WzcfcUj7s8oPHdUJbgspr8dAMDitLxj4w1T4g+L
        NS13xtfXGp6xq9y93eXc7bpLiVzlmY/Xt0AwBwKza8nOM1qZtXdWWkVsuy/z7n6d4aeHuD8OMmhl2HtK
        rL3qs+s52/8ASY7RXRa7ttlBO0EtwBRX3r/wRg/4Juf8ND+NYfib8aLAt4G8PXP/ABLLSZPk1y8Q9SD9
        6CIjJ7M4C8hWFc+X4GpmNeNCktX+C7s9rjHi7AcEZTWzfMZWhDZdZyfwwj3cn9yu3omz6L/4Io/8E1z8
        IPDVt8W/jfp5TxXrVvnQrG4j+bSLRx/rmB6TSqfqiHHVmA/RCgDAwKK/ZsBgaWXUI0KS0X4vq2f5acZ8
        X4/jnNq2b5jK85vRLaEV8MI+SX3u7erYUUUV2nywUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAcB+
        1F+ztoX7V3wF8S+APiNFv03xFaNB5oUF7SUfNFPHno8bhXH+7joTX8wn7QnwW139nT4xeJPA/wATLc22
        t+Gb17K5AB2y7SCsqZ6o6FXU91YV/V1X5b/8HGH/AAT7m+JPgiw+Nfwn06W613w6kem+Iba1iLyXlizY
        hnCqMs0LttPU7JM9Er5jibLfrVH6xBe9D8V/wN/vP33wG48/1ezOWTYuVsPiWrX2jV2i/Sa91+fL0TPx
        PtdHn1/UI7TT13SSnHso7k+wr1nw34eg8MaTHa2A4Xl3I5kbuxqbwT8HdY8N2Re40TVjdzgGRvsUvyjs
        o+Wtz/hC9a/6A2sf+AUv/wATX5jXlKXupaH9/wCUYWjg4+1qSXO/NaLt/mZlFaf/AAhetf8AQG1j/wAA
        pf8A4mur+CH7M3jT9oL4qaN4Q+H+hai2p6zOIkkntpI4LZOryyuVwqIoLE+2BkkCsYUalWShGLbZ6eKz
        LCYKjPEYitGMIJyk20kkldt+SR6F/wAE6P2E9X/bq+OEWkxC4s/CWjFLnxBqSDHkQ54hjbp50mCF9BuY
        8Lg/vz4D8C6T8MvBumeH/Adhb6Xo2j2yWlnaQLtjgjQYCj+p6k5J5NcJ+x3+yh4c/Y1+B2meDPh7GJPs
        487UL50Am1O6YDzJ5PrjAX+FQqjpXqVfruQ5NHKaHvfxJfE/0XkvxZ/mj4yeKNbxIza9FuOCpNqlHa/e
        pJfzS6L7MbLe7ZRRRXvH48FFFFABRRRQAUUUUAFFFFABRXy5q3/BRx/BP7Pnxb1rx/4YWH4ifCvxFJ4U
        /wCEWtbsu2u6hcSRDRVtnZA2y/S7sWVip2GWRTnymNcz8ff+CnWvfAbQPi0PEXhnwpban8LdU8G6PPc3
        2tyW+lmXXXtY5p55/JLRQWzXLNu2ksseSFzwAfZNFfJt9+3B451D9kXxz8TPhRc/AXx9L4CivNQv4/D/
        AIuuryxNra2TXLxfaEtSVuSVUBGXbtYEt2r3D9l7x54v+KHwY0bxH8Z9N8N6VqOvW0OoW9tol7PdwR20
        0MciB3mijbzBvYEBccDB54APQqK+TP2Sf+Cil7+0x+0J4i8J3l98IdKTQfEuveH/AOw4vFEs3iuRdNu5
        7Zbg2BgVVWTyBKRvO1Hzk11el/8ABQfSdT/bpn+EKaJeLonlyaVa+LTIDYXXiOGBby40Rcf8tksZI7jd
        nBKzR/ejYUAfRFFfMvi79t3xTa/toaj8LPDGieA9OTSpLAQReJ/Ec2lap4shuI0kmudGi+yvFcJBvaMr
        5hZpIZFIiG12v6B/wUn+HmmfH74s+BPjn4s8C+A7v4c63Z6ZZjV/ENvaz6tDPpdne/aPKmKFQHu3i43A
        +VnOSQAD6LoxzXyX8Dv+Codp8TPA/wAJvE/jHR9N0Pw/8Q/DHirxRqF8l+08Wk22izwJvUiMeakkc7SF
        uNoXgNnNdD4H/aJ+PHxi+H9j48+F3wq8F2vhbWLVdR0nRdf8UzWfiHUbR13xPIIrSS3tJZEKsIWkfbuA
        d0O4KAfSdFfH/if/AIK9eHtBvvhHqdj4M8V3/g34i6Rrup65eQW/mah4IOk3Npa3f22yTc8iQT3MkUxh
        LmPyS4DoGYev3n7WVle/tL/C/wAF+BU0zXvD/wAS/C2s+J7bXbS+EsXl2MmmrH5OwFZUlXUi28MMeWMZ
        3cAWPYaQjd1ryT9oj9pe/wDhh4+8JeA/hF4cTxd8Q/HEd3d6fY3F99gsLCytPKFzfX1yI5GjhR7m2jCp
        HI7vMiquNzJz3iv9pzx1+zT8KvFfiv8AbC8L+GV03RY7UaS3g3VZ9QuNbvLm4W2hsFtrmCExzPPLbxo3
        mMjGYbjGFNArHvtFfNnjf9oz47fBn4fX/j74t/CzwXceFNGtW1LV9H0DxRPeeINMs0XfNJGJbSO3vJY4
        wzNCkibtpEbudobzT9oD/grnc/Cf4l+Kx4F0TwV4k8GeE/Dvh3xHH5viR7LXfFEOsNcCKPSLM27Lcyhb
        dSsRdDIZVUFSc0DPt6ivij9pr/gqxrH7PXx7+JGgR+HfA9/ofwzTRHuLK68TPZ+JfEX9opu2aVY/Z3W5
        mQ/KsRdTI2FDKTXqi/tQfED42/EXxhov7IfhPwtfaN4C1V9B1XxF4o1eeytrvUo0Rp7Wyt7eCWSUQ+Yi
        STOY1Em9FEmxiAD6Dor4/wDit/wUz134XfDXxba+KPBWjaD8UvBXiXw34f1PStT1xv7ENvrd/FaWmqQ6
        ikO57Q7p2O6FJFa2lRlGAzem/svftmQfGb4a/EDXfibD4d0OD4Z6tc6Xq2r6TrH9p6BeRwWkN1Jd2l60
        cZeNEnKSBkBjlhlQk7ckA9zor52/ZC/be1L9sr4S+Lrzwp4Tbwf470Ccm20DxJM8JksrqP7TpN7MY0Z4
        4rm1eN2AVmjkSeIgtE1eaj/goj8UvCX7Mnxe+J3xN8EfD8ad8L9V1DQEstL128lm1C9s9RSzdmaW0RY4
        WBkcEbm4UEckgA+06K8B1P8Aaf8AHPxY+LfjDwn+yL4U8OanbfD69j0rXvEXibVZrKwGotBHcNY2kNvB
        LLcPHFcQNJIxjRDIFBkYMF4n4x/8FJte+AHwf+J8/wAUfh3HF8SvhdbaVqUvh+y1kTWHiOxv70WkF1p9
        88SHa0iXMZWaKNo5IsMNjK7AH1pRXy98bP8AgpxoHg39h7xz8XPhbpc2qav4Amt7LWfCmrsdN1LRr2S6
        gge1vo8O0EiifeCAySKFZGZGVyUAdH8T/wBgDw/8Tv24PBfxn1DUbuB/DNmVv9DRR9j1y+gEq6ZezjvJ
        ZrfakEJBObhDkeUtcv8AHv8A4Jx3vxa1z4r6t4a8Z2mk6l8RvEPhHxHa/a9HN5b6ZLoE1tMkciLPGZ0m
        a1AbDRlQxwTiiigD0bX/AIFeNfit+zV8Q/Afxu8T+Ep73xto1/otvqGgeHZtOhsI7q1eDe8E15OZWUyF
        uHQEADA616F8LfBX/Ctfhl4c8Ofaftn9gaXbab9o2bPP8mJY9+3J2525xk4z1oooA8//AGfv2Y7z9nX4
        T+MNE8Ia5Z3OteIfEfiHxJZalcadlLGbU7+4vER4hJmVYWuAp+dd4T+HPHiU3/BFjwBp/wADNP0vwhrn
        iew+J2kXcXiO08cy6tfXEg8SLL9ofWJNPa5+zM8twZWkjCgMk0iAgHNFFAHU/tQfsOfEH9qXSvEPhDx1
        8SvD9x8OvFV3bXssFz4UWXXPDpjERePSL5bhEh3PEXjmlhlmgaRiHfCbfUPg3+zPB8KfjB8WvFd1fxaq
        fihr1prYt3tAh03yNLs7Dyt5Y+Zu+xeZuwuPMxg4ySigDy34Of8ABMvTPhz4Y+F+ieL9ei8SaR8P/D/i
        jw7e2kuneVHrkGt3EEsgYCQ+WEWEx7fm3B85XGDp+Cf2YfjX8Hvh/aeA/hH8YvD3/CH6VbLp+k6jrvhF
        9Q8R6TZooSKL7Qt5HbXUkaBVWaW3JO0GRZTksUUAaHwt/wCCfuhfBT4lfCTV/h1q98mmfCzw9r2i/Zr1
        ftN1rU+rXNlc3F7cXOR++aa0lkfCYdrhiNoABz/Af/BNvw58If20dJ+K3wh1jUdD0Ox0nWLF/BiANo9v
        dajNZyz3lin/AC6NI1ihkiT907HeFRy5kKKAO2/aK/Zjuviz448J+OPhb4lfwZ8RPA63VvpmqNZC/s7q
        zuvK+02N9al0M9vI1vbv8kkbo8KMrjDBsLxL+y74x/aK+F3i3wp+2P4v0HVdK8QQ2y6fD4R0WXRpNDub
        eYTxX0VxPc3EjXCTRwSIflRGhX5WyclFAGN40/Ze+NPxj+Ht34C+Mvxh8OyeDtVtm0/WNQ0Lwi+neItY
        s3UpLCbhr2S3tXkQsjyw24IDExiI4K8x8TP+CT2h+JvjXqfxE+GOu2/g7xjpWn+H7TwJqFtpKTN4PbSo
        7yIx4aQfabS5hvfJmtiUBRAQwcI6FFAHqvwx/ZE0/wAF/tQ/EL4p+JpdK1jWvHUOkJCp0xVk0drG1eB/
        JmZmfbIX3YG3bjGW61hP+yp43+EHxO8XeIf2RPG2gaFpvjzUW1rWfDviXQpdVsItSdESa8spILq3lgMo
        iRpImaRGcM6hGZixRQByPjT/AIJgwfFbwN4iT40eLl8V+MPHPinw7r/ibVbvR4xYXtpo19FcwaTb6f5h
        WGz2JPGFd5WLXMsjtIWxU1z/AME1Guf2dJvglJ41nf4Lvr8E8ehNZMLyLw8n72Tw79tSZWa2aYKglx5i
        2xaAluJAUUAdH8Pf+CeHhn4E/tL6J8Rv2edR1Xw9IdLn0PxPp97qN7q6eI7I4ktVMl3cO0EltOHeNlyN
        txcIV+cMtDx1/wAE9h40/ZL+LXwu/wCErNv/AMLR8S6p4hOo/wBn7v7O+26gLzyvK8weZsxs3blz1wOl
        FFAG1rH7LPjL4bfF/wAV+MP2SfGeieHl8e3Ueo+IfD/iLRZNU0u4v0hjt/t1sYLmCW2meGCFJF3PG/lK
        21W3M3JfEX/gm9ffGb4WfEWD4u+PX1f4g/ExdKtr7X49JEFlpdlp16t3b2NjY+cTFAHNwxLzSSM87Ozk
        BUUooAsf8FE/+CYXhz9u7wVqZ0bWr/wF42v7SGwm13TEBXV7OKdJ1stSgyFu7cSRhl3YeJiWjZcuHKKK
        AP/Z
</value>
  </data>
</root>